{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthGuard {\n  canActivate(route, state) {\n    if (!this.authService.isLoggedIn()) {\n      this.router.navigateByUrl('/');\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)();\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAQA,OAAM,MAAOA,SAAS;EACpBC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAC1B,IAAI,CAAC,IAAI,CAACC,WAAW,CAACC,UAAU,EAAE,EAAE;MACjC,IAAI,CAACC,MAAM,CAACC,aAAa,CAAC,GAAG,CAAC;MAC9B,OAAO,KAAK;KACb,MAAM;MACL,OAAO,IAAI;;EAGhB;;AAXWP,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAQ,SAATR,SAAS;EAAAS,YAFR;AAAM","names":["AuthGuard","canActivate","route","state","authService","isLoggedIn","router","navigateByUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\mateu\\Desktop\\studia\\technologie aplikacji webowych\\projekt\\client\\src\\app\\services\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (!this.authService.isLoggedIn()) {\n      \tthis.router.navigateByUrl('/');\n      \treturn false;\n    \t} else {\n      \treturn true;\n    \t}\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}